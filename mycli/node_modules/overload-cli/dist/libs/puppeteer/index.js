"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const uus_1 = tslib_1.__importDefault(require("uus"));
const utils_1 = require("../../utils");
const Skeleton_1 = tslib_1.__importDefault(require("./Skeleton"));
const LOGGER_TITLE = '制作骨架屏';
const initialize = async (skeletonConfig) => {
    if (Array.isArray(skeletonConfig.routes) && skeletonConfig.routes.length > 0) {
        const screenshotData = {};
        for (let i = 0; i < skeletonConfig.routes.length; i++) {
            const routeConfig = skeletonConfig.routes[i];
            const skeleton = new Skeleton_1.default(skeletonConfig);
            await skeleton.initialize();
            let originURL = (0, utils_1.concatOriginUrl)(skeletonConfig.originUrl, routeConfig.path, skeletonConfig.routeMode);
            if (routeConfig.query) {
                originURL = uus_1.default.concat(routeConfig.query, originURL);
            }
            // 制作骨架屏
            const { success, data = '', errorMessage = '未知错误' } = await (0, utils_1.loggerSpinning)(`${LOGGER_TITLE} - ${originURL}`, () => skeleton.genScreenShot(originURL, routeConfig));
            if (success === false) {
                (0, utils_1.loggerError)(LOGGER_TITLE, errorMessage);
                await skeleton.destroy();
                return { success: false };
            }
            if (skeletonConfig.isMobile === false) {
                screenshotData[routeConfig.path] = {
                    content: encodeURIComponent(data),
                };
            }
            else {
                screenshotData[routeConfig.path] = {
                    content: encodeURIComponent(data),
                    width: 375,
                };
            }
            await skeleton.destroy();
        }
        return { success: true, data: screenshotData };
    }
    return { success: false };
};
exports.default = { initialize };
