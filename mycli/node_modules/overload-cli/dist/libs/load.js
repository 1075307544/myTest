"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
const path = require('path');
const fs = require('fs');
const LOGGER_TITLE = '读取配置文件';
const REQUIRED_ATTRIBUTES = ['rootID', 'originUrl', 'routes'];
const initialize = async (configPath) => {
    (0, utils_1.loggerStart)(LOGGER_TITLE);
    const SKELETON_CONFIG_PATH = path.resolve(utils_1.OriginDirname, configPath);
    if (!fs.existsSync(SKELETON_CONFIG_PATH)) {
        (0, utils_1.loggerError)(LOGGER_TITLE, `未找到目标路径的配置文件 - ${SKELETON_CONFIG_PATH}`);
        return { success: false };
    }
    const skeletonConfig = require(SKELETON_CONFIG_PATH);
    if (!skeletonConfig || typeof skeletonConfig !== 'object') {
        (0, utils_1.loggerError)(LOGGER_TITLE, '配置文件内容格式异常');
        return { success: false };
    }
    let missingKey;
    const skeletonConfigKeys = Object.keys(skeletonConfig);
    REQUIRED_ATTRIBUTES.forEach((attr) => {
        if (!skeletonConfigKeys.includes(attr))
            missingKey = attr;
    });
    if (missingKey) {
        (0, utils_1.loggerError)(LOGGER_TITLE, `配置文件参数「${missingKey}」丢失`);
        return { success: false };
    }
    (0, utils_1.loggerEnd)(LOGGER_TITLE);
    return { success: true, data: skeletonConfig };
};
exports.default = { initialize };
